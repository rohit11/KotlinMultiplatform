name: Auto Assign Milestone to PRs

on:
  pull_request:
    types: [opened, closed]

jobs:
  assign-milestone:
    runs-on: ubuntu-latest
    if: |
      (github.event.pull_request.base.ref == 'main' &&
       (github.event.pull_request.merged == true || github.event.action == 'opened')) ||
      (startsWith(github.event.pull_request.base.ref, 'release/'))

    steps:
      - name: 🔍 Debug Event Context
        run: |
          echo "Event Action: ${{ github.event.action }}"
          echo "Base Branch: ${{ github.event.pull_request.base.ref }}"
          echo "Merged: ${{ github.event.pull_request.merged }}"

      - name: Determine milestone strategy and context
        id: context
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            echo "strategy=date" >> $GITHUB_OUTPUT
            echo "ref_date=${{ github.event.pull_request.merged_at || github.event.pull_request.created_at }}" >> $GITHUB_OUTPUT
          else
            branch_name="${{ github.event.pull_request.base.ref }}"
            milestone_name="${branch_name#release/}"
            echo "strategy=name" >> $GITHUB_OUTPUT
            echo "milestone_name=$milestone_name" >> $GITHUB_OUTPUT
          fi
          echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Find or Create Matching Milestone
        id: milestone
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          STRATEGY="${{ steps.context.outputs.strategy }}"
          REF_DATE="${{ steps.context.outputs.ref_date }}"
          MILESTONE_NAME="${{ steps.context.outputs.milestone_name }}"

          milestones=$(curl -s -H "Authorization: Bearer $TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/milestones?state=open)

          if [[ "$STRATEGY" == "date" ]]; then
            milestone_id=$(echo "$milestones" | jq -r --arg date "$REF_DATE" '
              [ .[] | select(.due_on != null and (.due_on >= $date)) ]
              | sort_by(.due_on)
              | .[0].number // empty
            ')
            milestone_name=$(echo "$milestones" | jq -r --arg date "$REF_DATE" '
              [ .[] | select(.due_on != null and (.due_on >= $date)) ]
              | sort_by(.due_on)
              | .[0].title // empty
            ')
          else
            milestone_id=$(echo "$milestones" | jq -r --arg name "$MILESTONE_NAME" '
              .[] | select(.title == $name) | .number // empty
            ')
            milestone_name="$MILESTONE_NAME"
          fi

          if [ -z "$milestone_id" ]; then
            echo "⚠️ Milestone not found. Creating new milestone: $milestone_name"
            due_date=$(date -u -d "+7 days" '+%Y-%m-%dT00:00:00Z')

            response=$(curl -s -X POST \
              -H "Authorization: Bearer $TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/milestones \
              -d "{\"title\":\"$milestone_name\",\"state\":\"open\",\"due_on\":\"$due_date\"}")

            milestone_id=$(echo "$response" | jq -r '.number')
            echo "✅ Created milestone $milestone_name with ID $milestone_id"
          else
            echo "✅ Found existing milestone $milestone_name with ID $milestone_id"
          fi

          echo "milestone_id=$milestone_id" >> $GITHUB_OUTPUT
          echo "milestone_name=$milestone_name" >> $GITHUB_OUTPUT

      - name: Assign milestone to PR
        if: steps.milestone.outputs.milestone_id != ''
        run: |
          PR_NUMBER=${{ steps.context.outputs.pr_number }}
          MILESTONE_ID=${{ steps.milestone.outputs.milestone_id }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          curl -s -X PATCH \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER \
            -d "{\"milestone\": $MILESTONE_ID}"

          echo "✅ Assigned milestone '${{ steps.milestone.outputs.milestone_name }}' to PR #$PR_NUMBER"
